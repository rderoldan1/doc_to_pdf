{"name":"Doc to pdf","tagline":"Rails 3 gem to generate pdf output of rdoc documentation ","body":"# DocToPdf\r\n[![Gem Version](https://badge.fury.io/rb/doc_to_pdf.png)](http://badge.fury.io/rb/doc_to_pdf)\r\n[![Code Climate](https://codeclimate.com/github/rderoldan1/doc_to_pdf.png)](https://codeclimate.com/github/rderoldan1/doc_to_pdf)\r\n[![Coverage Status](https://coveralls.io/repos/rderoldan1/doc_to_pdf/badge.png)](https://coveralls.io/r/rderoldan1/doc_to_pdf)\r\n[![Build Status](https://travis-ci.org/rderoldan1/doc_to_pdf.png?branch=master)](https://travis-ci.org/rderoldan1/doc_to_pdf)\r\n[![Dependency Status](https://gemnasium.com/rderoldan1/doc_to_pdf.png)](https://gemnasium.com/rderoldan1/doc_to_pdf)\r\n\r\nGEM to export rdoc in a pdf file using [wkhtmltopdf libary](http://code.google.com/p/wkhtmltopdf/)\r\n\r\n## Instalation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'doc_to_pdf'\r\n\r\nif you like it works only in your dev env, include in your dev group in Gemfile:\r\n\r\n    group :development do\r\n       gem 'doc_to_pdf'\r\n    end\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install doc_to_pdf\r\n\r\n## Usage\r\n\r\nFirst create rdoc documetation with rdoc as you actually do:\r\n\r\n    #all your app\r\n    rdoc\r\n\r\n    #only app/ folder\r\n    rake doc:app\r\n\r\nThe gem include a rake task under `doc` namespace\r\n\r\n    rake doc:pdf\r\n\r\nIf you like to change the default name \"doc.pdf\" call the programm with file param:\r\n\r\n    $ rake doc:pdf file=myNewFile\r\n    Loading pages (1/5)\r\n    Resolving links (2/5)\r\n    Counting pages (3/5)\r\n    Printing pages (5/5)\r\n    Done\r\n\r\n![Imgur](http://i.imgur.com/w8agvbY.png)\r\n\r\nIn my case the menu based in the left is more than 4 pages, and the links doesn't work.\r\n\r\n\r\nAlso it offer an option to clean the _\"innecessary\"_ html, only pass the param `clean=true (default is false)`\r\n\r\n    $ rake doc:pdf clean=true\r\n    clean html, this could take a while.\r\n    Loading pages (1/5)\r\n    Resolving links (2/5)\r\n    Counting pages (3/5)\r\n    Printing pages (5/5)\r\n    Done\r\n    \r\n_WARNING_: This option change your html files    \r\n    \r\n\r\n![Imgur](http://i.imgur.com/SOq9nm7.png)\r\n\r\nNow it looks cleanner :D\r\n\r\nThe pdf file is saved in your application root\r\n\r\n\r\n## PDF Layout\r\n\r\nAll the pages include the number of the page, the format is page/total i.e  (12/100)\r\n\r\nTable of content\r\n![Imgur](http://i.imgur.com/riQ0xqZ.png)\r\n\r\nClass Documentation\r\n![Imgur](http://i.imgur.com/dwU3TBD.png)\r\n\r\n## Recomendations\r\n\r\n* use annotate to comment your models and routes files, [please take a look](https://github.com/ctran/annotate_models)\r\n* I created a css for prettier in order to cusmotize more like gituh, the file is in [this gist](https://gist.github.com/rderoldan1/6396578#file-rdoc-css-L1), if\r\nyou like to use it replace the custom css.\r\n improvements:\r\n - Code highlight\r\n - Text formating\r\n - Fresh colors\r\n\r\nHow the css looks?\r\n\r\n![Imgur](http://i.imgur.com/bQGrVCa.png)\r\n\r\n## Tested with\r\n\r\n\r\n##### OS\r\n* Mac OS - Mountain Lion\r\n\r\n* Ubuntu - 12.04\r\n\r\n#### Ruby env\r\n* Ruby 1.9.3 - 2.0\r\n\r\n* Rails 3.2.13\r\n\r\n#### Binaries\r\n* wkhtmltopdf 0.0.9\r\n\r\n### Requirements GEMS\r\n* Nokogiri 1.6\r\n* Colorige\r\n\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}